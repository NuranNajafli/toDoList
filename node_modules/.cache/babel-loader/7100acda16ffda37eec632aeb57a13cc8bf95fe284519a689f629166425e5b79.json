{"ast":null,"code":"var _jsxFileName = \"/Users/nurannajafli/Desktop/todolist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [values, setValues] = useState(\"\");\n  const [listItem, setListItem] = useState([]);\n  const addItem = () => {\n    if (!values) {\n      alert(\"please enter something\");\n    }\n    const item = {\n      id: listItem.length + 1,\n      value: values\n    };\n    setListItem(pre => [...pre, item]);\n    setValues(\"\");\n  };\n  const deleteItem = id => {\n    const newList = listItem.filter(a => a.id !== id);\n    setListItem(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write something\",\n        value: values,\n        onChange: e => setValues(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItem.map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [e.value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(e.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nz+JSPkIl+kkqyyzTD4k7hmtpF8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","values","setValues","listItem","setListItem","addItem","alert","item","id","length","value","pre","deleteItem","newList","filter","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","map","i","_c","$RefreshReg$"],"sources":["/Users/nurannajafli/Desktop/todolist/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [values, setValues] = useState(\"\");\n  const [listItem, setListItem] = useState([]);\n\n  const addItem = () => {\n    if (!values) {\n      alert(\"please enter something\");\n    }\n\n    const item = {\n      id: listItem.length + 1,\n      value: values,\n    };\n    setListItem((pre) => [...pre, item]);\n    setValues(\"\");\n  };\n\n  const deleteItem = (id) => {\n    const newList = listItem.filter((a) => a.id !== id);\n    setListItem(newList);\n  };\n  return (\n    <div className=\"main\">\n      <h1>To do List</h1>\n      <div className=\"event\">\n        <input\n          type=\"text\"\n          placeholder=\"write something\"\n          value={values}\n          onChange={(e) => setValues(e.target.value)}\n        />\n        <button onClick={addItem}>Add</button>\n      </div>\n      <ul>\n        {listItem.map((e, i) => (\n          <li key={i}>\n            {e.value} <button onClick={() => deleteItem(e.id)}>X</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAACJ,MAAM,EAAE;MACXK,KAAK,CAAC,wBAAwB,CAAC;IACjC;IAEA,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEL,QAAQ,CAACM,MAAM,GAAG,CAAC;MACvBC,KAAK,EAAET;IACT,CAAC;IACDG,WAAW,CAAEO,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEJ,IAAI,CAAC,CAAC;IACpCL,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMU,UAAU,GAAIJ,EAAE,IAAK;IACzB,MAAMK,OAAO,GAAGV,QAAQ,CAACW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC;IACnDJ,WAAW,CAACS,OAAO,CAAC;EACtB,CAAC;EACD,oBACEf,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBvB,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBnB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7Bb,KAAK,EAAET,MAAO;QACduB,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAAChB,KAAK;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFvB,OAAA;QAAQ6B,OAAO,EAAEtB,OAAQ;QAAAY,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNvB,OAAA;MAAAmB,QAAA,EACGd,QAAQ,CAACyB,GAAG,CAAC,CAACH,CAAC,EAAEI,CAAC,kBACjB/B,OAAA;QAAAmB,QAAA,GACGQ,CAAC,CAACf,KAAK,EAAC,GAAC,eAAAZ,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAACa,CAAC,CAACjB,EAAE,CAAE;UAAAS,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GADtDQ,CAAC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CA1CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}